name: Build and Publish Add-on

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build ${{ matrix.arch }} add-on
    strategy:
      matrix:
        arch: [aarch64, amd64, armhf, armv7, i386]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get add-on information
        id: info
        run: |
          echo "version=$(yq eval '.version' cloudflare-ddns/config.yaml)" >> $GITHUB_OUTPUT
          echo "name=$(yq eval '.name' cloudflare-ddns/config.yaml)" >> $GITHUB_OUTPUT
          echo "slug=$(yq eval '.slug' cloudflare-ddns/config.yaml)" >> $GITHUB_OUTPUT
          echo "description=$(yq eval '.description' cloudflare-ddns/config.yaml)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        env:
          DOCKER_BUILDKIT: 1

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/addon-${{ steps.info.outputs.slug }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
          flavor: |
            latest=${{ github.ref == 'refs/heads/main' }}
            suffix=-${{ matrix.arch }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./cloudflare-ddns
          file: ./cloudflare-ddns/Dockerfile
          platforms: linux/${{ matrix.arch == 'armhf' && 'arm/v6' || matrix.arch == 'armv7' && 'arm/v7' || matrix.arch == 'aarch64' && 'arm64' || matrix.arch == 'i386' && '386' || matrix.arch }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_FROM=${{ matrix.arch == 'aarch64' && 'ghcr.io/home-assistant/aarch64-base:3.20' || matrix.arch == 'amd64' && 'ghcr.io/home-assistant/amd64-base:3.20' || matrix.arch == 'armhf' && 'ghcr.io/home-assistant/armhf-base:3.20' || matrix.arch == 'armv7' && 'ghcr.io/home-assistant/armv7-base:3.20' || 'ghcr.io/home-assistant/i386-base:3.20' }}
          cache-from: type=gha,scope=${{ matrix.arch }}
          cache-to: type=gha,mode=max,scope=${{ matrix.arch }}

  publish-manifest:
    runs-on: ubuntu-latest
    name: Publish multi-arch manifest
    needs: build
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get add-on information
        id: info
        run: |
          echo "version=$(yq eval '.version' cloudflare-ddns/config.yaml)" >> $GITHUB_OUTPUT
          echo "slug=$(yq eval '.slug' cloudflare-ddns/config.yaml)" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          IMAGE_BASE="ghcr.io/${{ github.repository_owner }}/addon-${{ steps.info.outputs.slug }}"
          
          # Determine tag based on trigger
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            TAG="${GITHUB_REF#refs/tags/v}"
            docker buildx imagetools create -t "${IMAGE_BASE}:${TAG}" \
              "${IMAGE_BASE}:${TAG}-aarch64" \
              "${IMAGE_BASE}:${TAG}-amd64" \
              "${IMAGE_BASE}:${TAG}-armhf" \
              "${IMAGE_BASE}:${TAG}-armv7" \
              "${IMAGE_BASE}:${TAG}-i386"
          elif [[ "${{ github.ref }}" == refs/heads/main ]]; then
            TAG="latest"
            docker buildx imagetools create -t "${IMAGE_BASE}:${TAG}" \
              "${IMAGE_BASE}:main-aarch64" \
              "${IMAGE_BASE}:main-amd64" \
              "${IMAGE_BASE}:main-armhf" \
              "${IMAGE_BASE}:main-armv7" \
              "${IMAGE_BASE}:main-i386"
          fi

  lint:
    runs-on: ubuntu-latest
    name: Lint and validate
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Validate config.yaml
        run: |
          yq eval 'has("name") and has("version") and has("slug") and has("description")' cloudflare-ddns/config.yaml

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: cloudflare-ddns/Dockerfile
          ignore: DL3006,DL3018

      - name: Lint shell scripts
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck
          shellcheck cloudflare-ddns/run.sh || true
